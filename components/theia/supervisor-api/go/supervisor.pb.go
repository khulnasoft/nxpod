// Copyright (c) 2020 TypeFox GmbH. All rights reserved.
// Licensed under the GNU Affero General Public License (AGPL).
// See License-AGPL.txt in the project root for license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: supervisor.proto

package supervisor

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ContentSource int32

const (
	ContentSource_from_other    ContentSource = 0
	ContentSource_from_backup   ContentSource = 1
	ContentSource_from_prebuild ContentSource = 2
)

var ContentSource_name = map[int32]string{
	0: "from_other",
	1: "from_backup",
	2: "from_prebuild",
}

var ContentSource_value = map[string]int32{
	"from_other":    0,
	"from_backup":   1,
	"from_prebuild": 2,
}

func (x ContentSource) String() string {
	return proto.EnumName(ContentSource_name, int32(x))
}

func (ContentSource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b8b9452d77b1c7d2, []int{0}
}

type PrepareBackupRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareBackupRequest) Reset()         { *m = PrepareBackupRequest{} }
func (m *PrepareBackupRequest) String() string { return proto.CompactTextString(m) }
func (*PrepareBackupRequest) ProtoMessage()    {}
func (*PrepareBackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8b9452d77b1c7d2, []int{0}
}

func (m *PrepareBackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareBackupRequest.Unmarshal(m, b)
}
func (m *PrepareBackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareBackupRequest.Marshal(b, m, deterministic)
}
func (m *PrepareBackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareBackupRequest.Merge(m, src)
}
func (m *PrepareBackupRequest) XXX_Size() int {
	return xxx_messageInfo_PrepareBackupRequest.Size(m)
}
func (m *PrepareBackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareBackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareBackupRequest proto.InternalMessageInfo

type PrepareBackupResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareBackupResponse) Reset()         { *m = PrepareBackupResponse{} }
func (m *PrepareBackupResponse) String() string { return proto.CompactTextString(m) }
func (*PrepareBackupResponse) ProtoMessage()    {}
func (*PrepareBackupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8b9452d77b1c7d2, []int{1}
}

func (m *PrepareBackupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareBackupResponse.Unmarshal(m, b)
}
func (m *PrepareBackupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareBackupResponse.Marshal(b, m, deterministic)
}
func (m *PrepareBackupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareBackupResponse.Merge(m, src)
}
func (m *PrepareBackupResponse) XXX_Size() int {
	return xxx_messageInfo_PrepareBackupResponse.Size(m)
}
func (m *PrepareBackupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareBackupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareBackupResponse proto.InternalMessageInfo

type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8b9452d77b1c7d2, []int{2}
}

func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

type StatusResponse struct {
	CanaryAvailable      bool     `protobuf:"varint,1,opt,name=canary_available,json=canaryAvailable,proto3" json:"canary_available,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8b9452d77b1c7d2, []int{3}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetCanaryAvailable() bool {
	if m != nil {
		return m.CanaryAvailable
	}
	return false
}

type DebugPauseTheiaRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugPauseTheiaRequest) Reset()         { *m = DebugPauseTheiaRequest{} }
func (m *DebugPauseTheiaRequest) String() string { return proto.CompactTextString(m) }
func (*DebugPauseTheiaRequest) ProtoMessage()    {}
func (*DebugPauseTheiaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8b9452d77b1c7d2, []int{4}
}

func (m *DebugPauseTheiaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugPauseTheiaRequest.Unmarshal(m, b)
}
func (m *DebugPauseTheiaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugPauseTheiaRequest.Marshal(b, m, deterministic)
}
func (m *DebugPauseTheiaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugPauseTheiaRequest.Merge(m, src)
}
func (m *DebugPauseTheiaRequest) XXX_Size() int {
	return xxx_messageInfo_DebugPauseTheiaRequest.Size(m)
}
func (m *DebugPauseTheiaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugPauseTheiaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DebugPauseTheiaRequest proto.InternalMessageInfo

type DebugPauseTheiaResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DebugPauseTheiaResponse) Reset()         { *m = DebugPauseTheiaResponse{} }
func (m *DebugPauseTheiaResponse) String() string { return proto.CompactTextString(m) }
func (*DebugPauseTheiaResponse) ProtoMessage()    {}
func (*DebugPauseTheiaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8b9452d77b1c7d2, []int{5}
}

func (m *DebugPauseTheiaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebugPauseTheiaResponse.Unmarshal(m, b)
}
func (m *DebugPauseTheiaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebugPauseTheiaResponse.Marshal(b, m, deterministic)
}
func (m *DebugPauseTheiaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebugPauseTheiaResponse.Merge(m, src)
}
func (m *DebugPauseTheiaResponse) XXX_Size() int {
	return xxx_messageInfo_DebugPauseTheiaResponse.Size(m)
}
func (m *DebugPauseTheiaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DebugPauseTheiaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DebugPauseTheiaResponse proto.InternalMessageInfo

type ContentStatusRequest struct {
	// if true this request will return either when it times out or when the workspace content
	// has become available.
	Wait                 bool     `protobuf:"varint,1,opt,name=wait,proto3" json:"wait,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContentStatusRequest) Reset()         { *m = ContentStatusRequest{} }
func (m *ContentStatusRequest) String() string { return proto.CompactTextString(m) }
func (*ContentStatusRequest) ProtoMessage()    {}
func (*ContentStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8b9452d77b1c7d2, []int{6}
}

func (m *ContentStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentStatusRequest.Unmarshal(m, b)
}
func (m *ContentStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentStatusRequest.Marshal(b, m, deterministic)
}
func (m *ContentStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentStatusRequest.Merge(m, src)
}
func (m *ContentStatusRequest) XXX_Size() int {
	return xxx_messageInfo_ContentStatusRequest.Size(m)
}
func (m *ContentStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContentStatusRequest proto.InternalMessageInfo

func (m *ContentStatusRequest) GetWait() bool {
	if m != nil {
		return m.Wait
	}
	return false
}

type ContentStatusResponse struct {
	// true if the workspace content is available
	Available bool `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	// source indicates where the workspace content came from
	Source               ContentSource `protobuf:"varint,2,opt,name=source,proto3,enum=supervisor.ContentSource" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ContentStatusResponse) Reset()         { *m = ContentStatusResponse{} }
func (m *ContentStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ContentStatusResponse) ProtoMessage()    {}
func (*ContentStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8b9452d77b1c7d2, []int{7}
}

func (m *ContentStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContentStatusResponse.Unmarshal(m, b)
}
func (m *ContentStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContentStatusResponse.Marshal(b, m, deterministic)
}
func (m *ContentStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentStatusResponse.Merge(m, src)
}
func (m *ContentStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ContentStatusResponse.Size(m)
}
func (m *ContentStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContentStatusResponse proto.InternalMessageInfo

func (m *ContentStatusResponse) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *ContentStatusResponse) GetSource() ContentSource {
	if m != nil {
		return m.Source
	}
	return ContentSource_from_other
}

func init() {
	proto.RegisterEnum("supervisor.ContentSource", ContentSource_name, ContentSource_value)
	proto.RegisterType((*PrepareBackupRequest)(nil), "supervisor.PrepareBackupRequest")
	proto.RegisterType((*PrepareBackupResponse)(nil), "supervisor.PrepareBackupResponse")
	proto.RegisterType((*StatusRequest)(nil), "supervisor.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "supervisor.StatusResponse")
	proto.RegisterType((*DebugPauseTheiaRequest)(nil), "supervisor.DebugPauseTheiaRequest")
	proto.RegisterType((*DebugPauseTheiaResponse)(nil), "supervisor.DebugPauseTheiaResponse")
	proto.RegisterType((*ContentStatusRequest)(nil), "supervisor.ContentStatusRequest")
	proto.RegisterType((*ContentStatusResponse)(nil), "supervisor.ContentStatusResponse")
}

func init() {
	proto.RegisterFile("supervisor.proto", fileDescriptor_b8b9452d77b1c7d2)
}

var fileDescriptor_b8b9452d77b1c7d2 = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x18, 0xc4, 0x01, 0x05, 0xf8, 0x20, 0x89, 0xfb, 0x91, 0xa6, 0x89, 0x55, 0xa1, 0xd4, 0x15, 0x52,
	0xa9, 0x44, 0xad, 0x96, 0x63, 0xc5, 0xa1, 0x2d, 0x0f, 0x50, 0xa5, 0x9c, 0x72, 0xa9, 0xd6, 0xe6,
	0x23, 0x31, 0x04, 0xef, 0xb2, 0x3f, 0x41, 0x80, 0xb8, 0xf0, 0x0a, 0x1c, 0x78, 0x30, 0x5e, 0x81,
	0x2b, 0xef, 0x50, 0x65, 0x77, 0xad, 0xd8, 0x49, 0x94, 0x4b, 0x14, 0xcf, 0x8e, 0x66, 0xe6, 0x9b,
	0x6f, 0x17, 0x42, 0x65, 0x04, 0xc9, 0x79, 0xae, 0xb8, 0x3c, 0x11, 0x92, 0x6b, 0x8e, 0xb0, 0x44,
	0xa2, 0xfd, 0x09, 0xe7, 0x93, 0x19, 0x25, 0x4c, 0xe4, 0x09, 0x2b, 0x0a, 0xae, 0x99, 0xce, 0x79,
	0xa1, 0x1c, 0x33, 0xee, 0x41, 0xf7, 0x5a, 0x92, 0x60, 0x92, 0x2e, 0x59, 0xf6, 0xc9, 0x88, 0x11,
	0x7d, 0x31, 0xa4, 0x74, 0xbc, 0x07, 0xbb, 0x2b, 0xb8, 0x12, 0xbc, 0x50, 0x14, 0x77, 0xa0, 0x75,
	0xa3, 0x99, 0x36, 0xaa, 0x64, 0x9e, 0x43, 0xbb, 0x04, 0x1c, 0x05, 0x5f, 0x42, 0x98, 0xb1, 0x82,
	0xc9, 0x6f, 0xb7, 0x6c, 0xce, 0xf2, 0x19, 0x4b, 0x67, 0xd4, 0x0f, 0x86, 0xc1, 0xd1, 0xa3, 0x51,
	0xc7, 0xe1, 0x17, 0x25, 0x1c, 0xf7, 0xa1, 0xf7, 0x96, 0x52, 0x33, 0xb9, 0x66, 0x46, 0xd1, 0xbb,
	0x29, 0xe5, 0xac, 0x94, 0x1d, 0xc0, 0xde, 0xda, 0x89, 0x8f, 0x70, 0x0c, 0xdd, 0x2b, 0x5e, 0x68,
	0x2a, 0x74, 0x2d, 0x09, 0x22, 0x3c, 0xf8, 0xca, 0x72, 0xed, 0xbd, 0xec, 0xff, 0x78, 0x0a, 0xbb,
	0x2b, 0x5c, 0x1f, 0x72, 0x1f, 0x1e, 0xaf, 0xa6, 0x5b, 0x02, 0x78, 0x0a, 0x4d, 0xc5, 0x8d, 0xcc,
	0xa8, 0xdf, 0x18, 0x06, 0x47, 0xed, 0xb3, 0xc1, 0x49, 0xa5, 0xe3, 0x52, 0xd0, 0x12, 0x46, 0x9e,
	0x78, 0x7c, 0x05, 0xad, 0xda, 0x01, 0xb6, 0x01, 0x3e, 0x48, 0xfe, 0xf9, 0x96, 0xeb, 0x29, 0xc9,
	0xf0, 0x1e, 0x76, 0xe0, 0x89, 0xfd, 0x4e, 0x6d, 0xa1, 0x61, 0x80, 0x3b, 0xd0, 0xb2, 0x80, 0x90,
	0x94, 0x9a, 0x7c, 0xf6, 0x3e, 0x6c, 0x9c, 0xfd, 0xbf, 0x0f, 0x2d, 0x57, 0xf8, 0xcd, 0xc2, 0x2d,
	0x23, 0xfc, 0x08, 0x0f, 0xfd, 0x22, 0x70, 0x58, 0x0d, 0xb1, 0x69, 0x6b, 0xd1, 0xc1, 0x16, 0x86,
	0x2f, 0x2f, 0xfa, 0xf5, 0xf7, 0xdf, 0xef, 0x46, 0x17, 0x31, 0x99, 0x9f, 0x26, 0x2e, 0x4a, 0x22,
	0xbc, 0xc1, 0x18, 0x9a, 0xae, 0x25, 0xac, 0xcd, 0x5b, 0x6b, 0x39, 0x8a, 0x36, 0x1d, 0x79, 0xf1,
	0x81, 0x15, 0x7f, 0x86, 0x3b, 0x15, 0x71, 0xe5, 0x14, 0xbf, 0x43, 0x67, 0x65, 0x9f, 0x18, 0x57,
	0x95, 0x36, 0x5f, 0x83, 0xe8, 0x70, 0x2b, 0xc7, 0xdb, 0x3e, 0xb7, 0xb6, 0x7d, 0xec, 0x55, 0x67,
	0x5a, 0xd0, 0x5e, 0x69, 0x6b, 0xf4, 0x27, 0x58, 0xee, 0xc6, 0xa5, 0x19, 0x6e, 0xda, 0x67, 0x6d,
	0xcc, 0x83, 0x2d, 0x0c, 0x6f, 0x7b, 0x61, 0x6d, 0xcf, 0x5d, 0x95, 0x99, 0xa3, 0xf8, 0x71, 0xc7,
	0x2f, 0xf0, 0x70, 0x1d, 0x4d, 0x16, 0x57, 0x32, 0xf9, 0xb1, 0xf8, 0x7d, 0xa3, 0xa5, 0xa1, 0x9f,
	0x97, 0x4f, 0xc7, 0x95, 0xa7, 0x9a, 0x36, 0xed, 0x9b, 0x7c, 0x7d, 0x17, 0x00, 0x00, 0xff, 0xff,
	0xb2, 0xaa, 0xb2, 0x42, 0xd1, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BackupServiceClient is the client API for BackupService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackupServiceClient interface {
	// Prepare prepares a workspace backup and is intended to be called by the PreStop
	// hook of the container. It should hardly ever be neccesary to call this from any
	// other point.
	Prepare(ctx context.Context, in *PrepareBackupRequest, opts ...grpc.CallOption) (*PrepareBackupResponse, error)
	// Status offers feedback on the workspace backup status. This status information can
	// be relayed to the user to provide transparency as to how "safe" their files/content
	// data are w.r.t. to being lost.
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	// DebugPauseTheia is just for demo purpose and will be removed.
	DebugPauseTheia(ctx context.Context, in *DebugPauseTheiaRequest, opts ...grpc.CallOption) (*DebugPauseTheiaResponse, error)
	// ContentStatus returns the status of the workspace content
	ContentStatus(ctx context.Context, in *ContentStatusRequest, opts ...grpc.CallOption) (*ContentStatusResponse, error)
}

type backupServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBackupServiceClient(cc grpc.ClientConnInterface) BackupServiceClient {
	return &backupServiceClient{cc}
}

func (c *backupServiceClient) Prepare(ctx context.Context, in *PrepareBackupRequest, opts ...grpc.CallOption) (*PrepareBackupResponse, error) {
	out := new(PrepareBackupResponse)
	err := c.cc.Invoke(ctx, "/supervisor.BackupService/Prepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backupServiceClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/supervisor.BackupService/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backupServiceClient) DebugPauseTheia(ctx context.Context, in *DebugPauseTheiaRequest, opts ...grpc.CallOption) (*DebugPauseTheiaResponse, error) {
	out := new(DebugPauseTheiaResponse)
	err := c.cc.Invoke(ctx, "/supervisor.BackupService/DebugPauseTheia", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backupServiceClient) ContentStatus(ctx context.Context, in *ContentStatusRequest, opts ...grpc.CallOption) (*ContentStatusResponse, error) {
	out := new(ContentStatusResponse)
	err := c.cc.Invoke(ctx, "/supervisor.BackupService/ContentStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BackupServiceServer is the server API for BackupService service.
type BackupServiceServer interface {
	// Prepare prepares a workspace backup and is intended to be called by the PreStop
	// hook of the container. It should hardly ever be neccesary to call this from any
	// other point.
	Prepare(context.Context, *PrepareBackupRequest) (*PrepareBackupResponse, error)
	// Status offers feedback on the workspace backup status. This status information can
	// be relayed to the user to provide transparency as to how "safe" their files/content
	// data are w.r.t. to being lost.
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
	// DebugPauseTheia is just for demo purpose and will be removed.
	DebugPauseTheia(context.Context, *DebugPauseTheiaRequest) (*DebugPauseTheiaResponse, error)
	// ContentStatus returns the status of the workspace content
	ContentStatus(context.Context, *ContentStatusRequest) (*ContentStatusResponse, error)
}

// UnimplementedBackupServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBackupServiceServer struct {
}

func (*UnimplementedBackupServiceServer) Prepare(ctx context.Context, req *PrepareBackupRequest) (*PrepareBackupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Prepare not implemented")
}
func (*UnimplementedBackupServiceServer) Status(ctx context.Context, req *StatusRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}
func (*UnimplementedBackupServiceServer) DebugPauseTheia(ctx context.Context, req *DebugPauseTheiaRequest) (*DebugPauseTheiaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DebugPauseTheia not implemented")
}
func (*UnimplementedBackupServiceServer) ContentStatus(ctx context.Context, req *ContentStatusRequest) (*ContentStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentStatus not implemented")
}

func RegisterBackupServiceServer(s *grpc.Server, srv BackupServiceServer) {
	s.RegisterService(&_BackupService_serviceDesc, srv)
}

func _BackupService_Prepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareBackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackupServiceServer).Prepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.BackupService/Prepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackupServiceServer).Prepare(ctx, req.(*PrepareBackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackupService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackupServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.BackupService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackupServiceServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackupService_DebugPauseTheia_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DebugPauseTheiaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackupServiceServer).DebugPauseTheia(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.BackupService/DebugPauseTheia",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackupServiceServer).DebugPauseTheia(ctx, req.(*DebugPauseTheiaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackupService_ContentStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackupServiceServer).ContentStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/supervisor.BackupService/ContentStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackupServiceServer).ContentStatus(ctx, req.(*ContentStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BackupService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "supervisor.BackupService",
	HandlerType: (*BackupServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Prepare",
			Handler:    _BackupService_Prepare_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _BackupService_Status_Handler,
		},
		{
			MethodName: "DebugPauseTheia",
			Handler:    _BackupService_DebugPauseTheia_Handler,
		},
		{
			MethodName: "ContentStatus",
			Handler:    _BackupService_ContentStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "supervisor.proto",
}
