lua_shared_dict prometheus_metrics 150M;
init_by_lua '
  prometheus = require("prometheus").init("prometheus_metrics")

  -- The actual values for this series are inserted in lib.log-headers.conf
  metric_requests = prometheus:counter(
    "nginx_http_requests_total", "Number of HTTP requests", {
    "method",
    "url",
    "host",
    "status",
    "latency",
    "serverName",
    "serverPort",
    "upstreamAddr",
    "nxpodRegion",
    "proxyHost",
    "proxyPort"
    })
  metric_latency = prometheus:histogram(
    "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
  metric_connections = prometheus:gauge(
    "nginx_http_connections", "Number of HTTP connections", {"state"})
';


server {
  listen 9145;
#   allow 192.168.0.0/16;
#   deny all;
  # Explicitly turn of auth_basic for production deployments
  auth_basic off;

  location /metrics {
    content_by_lua '
      metric_connections:set(ngx.var.connections_reading, {"reading"})
      metric_connections:set(ngx.var.connections_waiting, {"waiting"})
      metric_connections:set(ngx.var.connections_writing, {"writing"})
      prometheus:collect()
    ';
  }
}
